# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# See https://www.packer.io/docs/templates/hcl_templates/blocks/packer for more info
packer {
  required_plugins {
    vagrant = {
      source  = "github.com/hashicorp/vagrant"
      version = "~> 1"
    }
  }
}

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "cpus" {
  type    = string
  default = "2"
}

variable "disk_size" {
  type    = string
  default = "80000"
}

variable "guest_additions_sha256" {
  type    = string
  default = "b37f6aabe5a32e8b96ccca01f37fb49f4fd06674f1b29bc8fe0f423ead37b917"
}

variable "guest_additions_url" {
  type    = string
  default = "iso/VBoxGuestAdditions_7.0.12.iso"
}

variable "iso_checksum" {
  type    = string
  default = "fc866e1280e7b3f066b1380e831e33e7f3e78bc9db7bfc27744d569eadd974b3"
}

variable "iso_url" {
  type    = string
  default = "iso/AlmaLinux-8-latest-x86_64-minimal.iso"
}

variable "memory" {
  type    = string
  default = "1024"
}

variable "ssh_password" {
  type    = string
  default = "vagrant"
}

variable "ssh_username" {
  type    = string
  default = "vagrant"
}

variable "vm_name" {
  type    = string
  default = "almalinux8-basebox"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "virtualbox-iso" "autogenerated_1" {
  boot_command           = ["<tab> text ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos8-basebox.ks<enter><wait>"]
  boot_wait              = "5s"
  disk_size              = "${var.disk_size}"
  guest_additions_sha256 = "${var.guest_additions_sha256}"
  guest_additions_url    = "${var.guest_additions_url}"
  guest_os_type          = "RedHat_64"
  headless               = false
  http_directory         = "http"
  iso_checksum           = "sha256:${var.iso_checksum}"
  iso_url                = "${var.iso_url}"
  output_directory       = "output-virtualbox-${var.vm_name}"
  shutdown_command       = "echo ${var.ssh_password} | sudo -S shutdown -P now"
  ssh_password           = "${var.ssh_password}"
  ssh_timeout            = "10m"
  ssh_username           = "${var.ssh_username}"
  vboxmanage             = [["modifyvm", "{{ .Name }}", "--memory", "${var.memory}"], ["modifyvm", "{{ .Name }}", "--cpus", "${var.cpus}"]]
  vm_name                = "${var.vm_name}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.virtualbox-iso.autogenerated_1"]

  provisioner "shell" {
    execute_command = "echo ${var.ssh_password} | {{ .Vars }} sudo -S -E bash '{{ .Path }}'"
    scripts         = ["scripts/basebox/guestadditions.sh", "scripts/basebox/local.sh", "scripts/basebox/cleanup.sh", "scripts/basebox/zerodisk.sh"]
  }

  post-processor "vagrant" {
    keep_input_artifact = true
    output              = "builds/{{ .Provider }}-${var.vm_name}.box"
  }
}
